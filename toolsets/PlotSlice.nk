set cut_paste_input [stack 0]
push $cut_paste_input
Group {
 name PlotSlice
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {4 plot M {replace over right bottom}}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 1.1
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.05
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {1044 16}
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" +STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set Ne168d210 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set Ne32f980 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 284
  ProgramGroup 1
  KernelDescription "2 \"plot_slice\" iterate pixelWise 2f609c75c49dc0fd508857159951e9c14bbb0a4557e59c646ff19df60d2a2ca4 2 \"src\" Read Random \"dst\" Write Random 4 \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 4 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel plot_slice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float3 lines_color;\n\n  float cubic(float x) \{\n    x /= 1.414;\n    x = fabs(x);\n    return x < 1.0f ? 2.0f*x*x*x-3.0f*x*x+1 : 0.0f;\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    // Write cubic antialiased pixel value c in channel k at continuous float position x, y\n    int u0 = round(x);\n    int v0 = round(y);\n    int u, v = 0;\n    for (int j = 0; j <= 2; j++) \{\n      v = v0 + j - 1;\n      for (int i = 0; i <= 2; i++) \{\n        u = u0 + i - 1;\n        if ( dst.bounds.inside(u, v)) \{\n          float d = sqrt(pow(u-x, 2)+pow(v-y, 2));\n          float s = dst(u, v, k);\n          float w = cubic(d);\n          dst(u, v, k) = s+c*w;\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-(min_val*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      float4 source = src(pos.x, pos.y);\n      for (int i = 0; i < 3; i++)\{\n        write(pos.x, scale(source\[i]), i, source\[i]);\n      \}\n      if (draw_lines) \{\n        for (int i = 0; i < 10; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  plot_slice_max_val {{parent.max_value}}
  plot_slice_min_val {{parent.min_value}}
  plot_slice_draw_lines {{parent.draw_lines}}
  plot_slice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -327
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -255
 }
set N1ecaf6a0 [stack 0]
push $Ne32f980
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -256
 }
push $N1ecaf6a0
push $Ne32f980
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -256
 }
push $N1ecaf6a0
push $Ne168d210
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -250
 }
push $N1ecaf6a0
 Switch {
  inputs 4
  which {{parent.plot}}
  name switch_plot_type
  xpos -810
  ypos -178
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
